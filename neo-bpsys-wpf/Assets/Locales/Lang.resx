<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BanNumberControl" xml:space="preserve">
    <value>Ban number control</value>
    <comment>禁用数量控制</comment>
  </data>
  <data name="CurrentBan" xml:space="preserve">
    <value>Current ban</value>
    <comment>当局禁用</comment>
  </data>
  <data name="GlobalBan" xml:space="preserve">
    <value>Global ban</value>
    <comment>全局禁用</comment>
  </data>
  <data name="Number" xml:space="preserve">
    <value>st/rd/nd/th</value>
    <comment>号位</comment>
  </data>
  <data name="ProjectRepository" xml:space="preserve">
    <value>Project repository: </value>
    <comment>项目仓库</comment>
  </data>
  <data name="SoftwareUpdates" xml:space="preserve">
    <value>Software updates</value>
    <comment>应用更新</comment>
  </data>
  <data name="DownloadSource" xml:space="preserve">
    <value>Download source: </value>
    <comment>下载源</comment>
  </data>
  <data name="DownloadPreviewVersion" xml:space="preserve">
    <value>Download preview version?</value>
    <comment>是否下载预览版</comment>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
    <comment>关于</comment>
  </data>
  <data name="CheckForUpdates" xml:space="preserve">
    <value>Check for updates</value>
    <comment>检查更新</comment>
  </data>
  <data name="Install" xml:space="preserve">
    <value>Install</value>
    <comment>安装</comment>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Stop</value>
    <comment>停止</comment>
  </data>
  <data name="LanguageSetting" xml:space="preserve">
    <value>Language setting</value>
    <comment>语言设置</comment>
  </data>
  <data name="SourceOfImageResources" xml:space="preserve">
    <value>Source of image resources: </value>
    <comment>贴图素材来源</comment>
  </data>
  <data name="OpenSourceRepositoryUsed" xml:space="preserve">
    <value>Open source repositories used by our project: </value>
    <comment>使用的开源代码库</comment>
  </data>
  <data name="QuickAccess" xml:space="preserve">
    <value>Quick access</value>
    <comment>快捷入口</comment>
  </data>
  <data name="OpenFrontendDirectory" xml:space="preserve">
    <value>Open the frontend config file directory</value>
    <comment>打开前台配置文件目录</comment>
  </data>
  <data name="OpenGameFileDirectory" xml:space="preserve">
    <value>Open the game file output directory</value>
    <comment>打开对局文件输出目录</comment>
  </data>
  <data name="PersonalizeFrontendUI" xml:space="preserve">
    <value>Frontend UI personalization</value>
    <comment>前台UI个性化</comment>
  </data>
  <data name="ExportUIConfig" xml:space="preserve">
    <value>Export UI configuration</value>
    <comment>导出UI配置</comment>
  </data>
  <data name="ImportUIConfig" xml:space="preserve">
    <value>Import UI configuration</value>
    <comment>导入UI配置</comment>
  </data>
  <data name="PersonalizeBPWindow" xml:space="preserve">
    <value>BP window personalization</value>
    <comment>BP窗口自定义</comment>
  </data>
  <data name="EditImage" xml:space="preserve">
    <value>Edit image</value>
    <comment>修改图片</comment>
  </data>
  <data name="AutherDetails" xml:space="preserve">
    <value>Made by Zero_PLFJY | Auther's QQ: 3424127335 | Software feedback group(QQ): 175741665</value>
    <comment>作者相关信息</comment>
  </data>
  <data name="BPWindowImages" xml:space="preserve">
    <value>BP background</value>
    <comment>BP背景</comment>
  </data>
  <data name="CurrentBanLock" xml:space="preserve">
    <value>Current ban lock</value>
    <comment>当局禁用锁图案</comment>
  </data>
  <data name="GlobalBanLock" xml:space="preserve">
    <value>Global ban lock</value>
    <comment>全局禁用锁图案</comment>
  </data>
  <data name="PickingBorderImage" xml:space="preserve">
    <value>Picking Border Image</value>
    <comment>待选框</comment>
  </data>
</root>