<Page
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    Title="TalentPage"
    d:DataContext="{d:DesignInstance Type=vm:TalentPageViewModel,
                                     IsDesignTimeCreatable=True}"
    d:DesignHeight="1500"
    d:DesignWidth="685"
    mc:Ignorable="d"
    ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    x:Class="neo_bpsys_wpf.Views.Pages.TalentPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:controls="clr-namespace:neo_bpsys_wpf.Controls"
    xmlns:cv="clr-namespace:neo_bpsys_wpf.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enums="clr-namespace:neo_bpsys_wpf.Core.Enums;assembly=neo-bpsys-wpf.Core"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:neo_bpsys_wpf.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:vm="clr-namespace:neo_bpsys_wpf.ViewModels.Pages"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <WrapPanel Orientation="Horizontal">
        <Border Style="{StaticResource Card}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="求生者天赋" />
                <WrapPanel Grid.Row="1" Orientation="Horizontal">
                    <controls:TalentPicker
                        CharacterName="{Binding CurrentGame.SurPlayerList[0].Character.Name, Mode=OneWay}"
                        IsHighlighted="{Binding IsSurTalentHighlighted}"
                        Margin="0,0,10,10"
                        Player="{Binding CurrentGame.SurPlayerList[0]}" />
                    <controls:TalentPicker
                        CharacterName="{Binding CurrentGame.SurPlayerList[1].Character.Name, Mode=OneWay}"
                        IsHighlighted="{Binding IsSurTalentHighlighted}"
                        Margin="0,0,10,10"
                        Player="{Binding CurrentGame.SurPlayerList[1]}" />
                    <controls:TalentPicker
                        CharacterName="{Binding CurrentGame.SurPlayerList[2].Character.Name, Mode=OneWay}"
                        IsHighlighted="{Binding IsSurTalentHighlighted}"
                        Margin="0,0,10,10"
                        Player="{Binding CurrentGame.SurPlayerList[2]}" />
                    <controls:TalentPicker
                        CharacterName="{Binding CurrentGame.SurPlayerList[3].Character.Name, Mode=OneWay}"
                        IsHighlighted="{Binding IsSurTalentHighlighted}"
                        Margin="0,0,10,10"
                        Player="{Binding CurrentGame.SurPlayerList[3]}" />
                </WrapPanel>
            </Grid>
        </Border>
        <Border Style="{StaticResource Card}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="监管者天赋" />
                <controls:TalentPicker
                    CharacterName="{Binding CurrentGame.HunPlayer.Character.Name, Mode=OneWay}"
                    Grid.Row="1"
                    HorizontalAlignment="Left"
                    IsHighlighted="{Binding IsHunTalentHighlighted}"
                    IsTypeHun="True"
                    Margin="0,0,20,10"
                    Player="{Binding CurrentGame.HunPlayer}" />
            </Grid>
        </Border>
        <Border Style="{StaticResource Card}">
            <Border.Resources>
                <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
                <cv:BooleanToEnumConverter x:Key="BooleanToEnumConverter" />
            </Border.Resources>
            <Grid>
                <Grid.Resources>
                    <Style BasedOn="{StaticResource {x:Type controls:ToggleStyledRadioButton}}" TargetType="controls:ToggleStyledRadioButton">
                        <Setter Property="ImageHeight" Value="50" />
                        <Setter Property="ImageWidth" Value="50" />
                        <Setter Property="GroupName" Value="Trait" />
                        <Setter Property="Margin" Value="0,0,0,10" />
                    </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal">
                    <TextBlock Text="监管者辅助特质" />
                    <ui:ToggleSwitch
                        Content="是否显示"
                        IsChecked="{Binding IsTraitVisible}"
                        Margin="20,0,0,0"
                        d:IsChecked="True"
                        x:Name="IsTraitVisible" />
                </StackPanel>
                <WrapPanel
                    Grid.Row="1"
                    Margin="0,10,0,0"
                    Orientation="Horizontal"
                    Visibility="{Binding ElementName=IsTraitVisible, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}, Mode=TwoWay}">
                    <controls:ToggleStyledRadioButton
                        ImageSource="{DynamicResource Listen}"
                        IsChecked="{Binding SelectedTrait, Converter={StaticResource BooleanToEnumConverter}, ConverterParameter={x:Static enums:TraitType.聆听}}"
                        TagName="聆听" />
                    <controls:ToggleStyledRadioButton
                        ImageSource="{DynamicResource Abnormal}"
                        IsChecked="{Binding SelectedTrait, Converter={StaticResource BooleanToEnumConverter}, ConverterParameter={x:Static enums:TraitType.失常}}"
                        TagName="失常" />
                    <controls:ToggleStyledRadioButton
                        ImageSource="{DynamicResource Excitement}"
                        IsChecked="{Binding SelectedTrait, Converter={StaticResource BooleanToEnumConverter}, ConverterParameter={x:Static enums:TraitType.兴奋}}"
                        TagName="兴奋" />
                    <controls:ToggleStyledRadioButton
                        ImageSource="{DynamicResource Patroller}"
                        IsChecked="{Binding SelectedTrait, Converter={StaticResource BooleanToEnumConverter}, ConverterParameter={x:Static enums:TraitType.巡视者}}"
                        TagName="巡视者" />
                    <controls:ToggleStyledRadioButton
                        ImageSource="{DynamicResource Teleport}"
                        IsChecked="{Binding SelectedTrait, Converter={StaticResource BooleanToEnumConverter}, ConverterParameter={x:Static enums:TraitType.传送}}"
                        TagName="传送" />
                    <controls:ToggleStyledRadioButton
                        ImageSource="{DynamicResource Peeper}"
                        IsChecked="{Binding SelectedTrait, Converter={StaticResource BooleanToEnumConverter}, ConverterParameter={x:Static enums:TraitType.窥视者}}"
                        TagName="窥视者" />
                    <controls:ToggleStyledRadioButton
                        ImageSource="{DynamicResource Blink}"
                        IsChecked="{Binding SelectedTrait, Converter={StaticResource BooleanToEnumConverter}, ConverterParameter={x:Static enums:TraitType.闪现}}"
                        TagName="闪现" />
                    <controls:ToggleStyledRadioButton
                        ImageSource="{DynamicResource Warp}"
                        IsChecked="{Binding SelectedTrait, Converter={StaticResource BooleanToEnumConverter}, ConverterParameter={x:Static enums:TraitType.移形}}"
                        TagName="移形" />
                    <i:Interaction.Triggers>
                        <i:DataTrigger Binding="{Binding IsHunTalentHighlighted}" Value="true">
                            <i:ChangePropertyAction PropertyName="Style" Value="{StaticResource HighlightedWrapPanel}" />
                        </i:DataTrigger>
                        <i:DataTrigger Binding="{Binding IsHunTalentHighlighted}" Value="false">
                            <i:ChangePropertyAction PropertyName="Style" Value="{x:Null}" />
                        </i:DataTrigger>
                    </i:Interaction.Triggers>
                </WrapPanel>
            </Grid>
        </Border>
    </WrapPanel>
</Page>
